# Services needed: 
#   - mariadb: database service for wp
#   - nginx: web server for serving WP with https
#   - wordpress: application container running wordpress with php-fpm
# Volume and Network:
#   - VOLUME: Persistent storage for mariadb and WP files
#   - NETWORK: bridge network between containers!!!
# version: "3.5"

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  db:
    driver: local
    name: db
    driver_opts:
      type: none
      o: bind
      device: /$HOME/data/mariadb
  wp:
    driver: local
    name: wp
    driver_opts:
      type: none
      o: bind
      device: /$HOME/data/wordpress

services:
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    networks:
      - app-network
    # image: mariadb:notlatest
    env_file:
      .env
    volumes:
      - db:/var/lib/mysql
    restart: always
    # expose:
    #   - "3306" #internal connection between containers

  nginx:
    container_name: nginx
    build: ./requirements/nginx
    networks:
      - app-network
    depends_on:
      - wordpress # depends-on make sure WP starts before Nginx!!!
    # image: nginx:notlatest
    # env_file:
    #   - .env
    volumes:
      - wp:/var/www/html # mount wp files
    restart: unless-stopped
    ports:
      - "443:443"
      # <HOST_PORT>:<CONTAINER_PORT> map 443 on the host to port 443 for HTTPS
      # 443: extenal port on VM: https//server-ip:443
      # 443 (right) : internally (inside container), nginx listen on 443
  
  wordpress:
    container_name: wordpress
    networks:
      - app-network
    depends_on:
      - mariadb # mariadb starts before wp
    build: ./requirements/wordpress
    # image: wordpress:notlatest
    env_file:
      - .env
    volumes:
      - wp:/var/www/html
    restart: unless-stopped
    # expose:
    #   - "9000"



# bridge: default driver for standalne containers, create isolated network on Docker host
# host: rmv network isolation between containers and Docker host, directly share
# none: completely isolate container from network, no External Nor internal connect possible
# Custom Network: the network 'inception' is the customized network i invented
#  => isolate external connection, allow INTERNAL connection between containars
# 